package main

import (
	"fmt"
)

func main() {
	var x []int // неинициализированный
	
	x = append(x, 0) // append слайс инициализирует
	x = append(x, 1)
	x = append(x, 2)
	// x = append(x, 5555) // А если добавить эту строку, то капасити будет полным и массивы y, z будут разными
	
	y := append(x, 3) // Нового массива не создаётся, т.к капасити не полное
	
	fmt.Printf("ref x[0]= %p\n", &x[0])
	fmt.Printf("ref y[0]= %p\n", &y[0])
	z := append(x, 4)
	 
	fmt.Println(x, y, z) // [0 1 2] [0 1 2 4] [0 1 2 4]
	fmt.Println(len(x), len(y), len(z))
	fmt.Println(cap(x), cap(y), cap(z))
	fmt.Printf("ref z[0]= %p\n", &z[0])

}

// ВНИМАТЕЛЬНО ЧИТАЕМ и ПРОГОВАРИВАЕМ ВСЛУХ, СЛЕДИМ ЗА CAPACITY, 
// если длина меньше капасити, то массив шарится между слайсами
// Куда делась тройка?
// В какой момент увеличивается капасити?
// Как шарятся массивы между слайсами
// Как убедиться, что x, y шарят один массив? Просто напечатать пойнтер на x0 и y0