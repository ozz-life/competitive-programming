paths = [["London", "New York"], ["New York", "Lima"], ["Lima", "Sao Paulo"], ["Sao Paulo", "NSK"]]

// /**
//  * @param {string[][]} paths
//  * @return {string}
//  */
// const destCity = (paths) => {
//     let dest;
//     for (const path of paths) {
//         dest = path[1];
//         console.log(dest)
//         const isStart = paths.some(p => p[0] === dest)
//         if (!isStart) break;
//     }
//     return dest
// };

////////////////////////////////////////////////////////////////////////////////

// const destCity = (paths) => {
//     const map = new Map();
//     for (const path of paths) {
//         map.set(path[0], map.has(path[0]) ? 0 : 1);
//         map.set(path[1], map.has(path[1]) ? 0 : -1);
//         console.log(map)
//     }
//     for (const item of map) {
//         if (item[1] === -1) return item[0];
//     }
// };

////////////////////////////////////////////////////////////////////////////////

const destCity = (paths) => {
    const set = new Set();
    for (const path of paths) set.add(path[0]);
    for (const path of paths) {
        if (!set.has(path[1])) return path[1];
    }
};

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

console.log(destCity(paths));