-- SUM()Возвращает суммарное значение столбца таблицы базы данных
-- AVG()Возвращает среднее значение для столбца
-- MIN()Возвращает минимальное значение для столбца
-- MAX()Возвращает максимальное значение для столбца
-- COUNT()Возвращает количество записей таблицы базы данных
SELECT
    SUM(Total) AS TotalSales,
    AVG(Total) AS AverageSales,
    MAX(Total) AS MaximumSale,
    MIN(Total) AS MinSale,
    COUNT(*) AS SalesCount
FROM
    invoices;

-- ROUND(X,Y) Функция ROUND() округляет число X до указанного
-- числа десятичных знаков Y. Если аргумент Y отсутствует,
-- это означает, что он равен 0.
SELECT
    AVG(Total) AS [Average Sales],
    ROUND(AVG(Total), 2) AS [Rounded Average Sales]
FROM
    invoices;

--     ВНИМАНИЕ
-- При использовании функции ROUND() с денежными единицами будьте
-- внимательны при округлении и изменении значений в промежуточных вы-
-- числениях. Обычно округление выполняется только на последнем шаге.
-- Также вы можете добавить комментарии, чтобы указать, что результаты
-- округляются до двух знаков после запятой.
-- ВНИМАНИЕ
-- Следующий запрос написан неправильно, чтобы показать, что происходит
-- при сочетании в операторе SELECT агрегатных функций с неагрегатными
-- полями. Этот запрос не вызывает ошибок, но он неправильно отображает
-- запрашиваемую информацию.
SELECT
    BillingCity,
    AVG(Total)
FROM
    invoices
ORDER BY
    BillingCity;

-- Т.к городов много, а среднее по тоталу одно, мы используем как аграгетные, Так
-- и не агргеатные состояния, исправляем, через GROUP BY
SELECT
    BillingCity,
    AVG(Total)
FROM
    invoices
GROUP BY
    BillingCity
ORDER BY
    BillingCity;

-- (Неправильное использование агрегата: AVG())
-- Это сообщение об ошибке информирует нас, что для создания условия на
-- основе агрегатной функции (по крайней мере, в данном случае) мы не можем
-- использовать условие WHERE. В данном случае условие WHERE может указывать
-- только, какую информацию извлекать из полей, указанных в условии SELECT.
-- Если необходима дополнительная фильтрация на основе агрегатных функций,
-- необходимо включить вторичную фильтрацию, известную как условие HAVING.
-- Условие HAVING всегда следует после условия GROUP BY. Измененный запрос
-- теперь выглядит следующим образом:
SELECT
    BillingCity,
    AVG(Total)
FROM
    invoices
GROUP BY
    BillingCity
HAVING
    AVG(Total) > 5
ORDER BY
    BillingCity